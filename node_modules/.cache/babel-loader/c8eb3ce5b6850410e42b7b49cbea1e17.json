{"ast":null,"code":"var _jsxFileName = \"/Users/ffaiku/opt/FH/4 Semester/Verteilte Systeme/Project/smart-home-ui/smart-home-ui/src/container/Blind/Blind.tsx\";\nimport * as React from 'react';\nimport { BlindApi } from \"../../api/blind/Blind.api\";\nimport { useEffect, useState } from \"react\";\n\nconst Blind = () => {\n  const [blindObjects, setBlindObjects] = useState();\n  useEffect(() => {\n    getBlinds(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getBlinds = async () => {\n    const response = await BlindApi.fetchBlinds();\n    console.log(response);\n    setBlindObjects(response);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \" Hello from Blind \");\n};\n\nexport default Blind;","map":{"version":3,"sources":["/Users/ffaiku/opt/FH/4 Semester/Verteilte Systeme/Project/smart-home-ui/smart-home-ui/src/container/Blind/Blind.tsx"],"names":["React","BlindApi","useEffect","useState","Blind","blindObjects","setBlindObjects","getBlinds","response","fetchBlinds","console","log"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AAEA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,EAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,GADK,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAMA,QAAMA,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAA0B,GAAG,MAAMP,QAAQ,CAACQ,WAAT,EAAzC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAF,IAAAA,eAAe,CAACE,QAAD,CAAf;AACD,GAJD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ;AAGD,CAlBD;;AAoBA,eAAeJ,KAAf","sourcesContent":["import * as React from 'react';\nimport {BlindApi} from \"../../api/blind/Blind.api\";\nimport {IBlindInterface} from \"../../api/blind/Blind.interface\";\nimport {useEffect, useState} from \"react\";\n\nconst Blind: React.FC = () => {\n  const [blindObjects, setBlindObjects] = useState<IBlindInterface[]>();\n  useEffect(() => {\n    getBlinds();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const getBlinds = async () => {\n    const response:IBlindInterface[] = await BlindApi.fetchBlinds();\n    console.log(response);\n    setBlindObjects(response)\n  };\n\n\n  return (\n      <div> Hello from Blind </div>\n  );\n};\n\nexport default Blind;\n"]},"metadata":{},"sourceType":"module"}