{"ast":null,"code":"var _jsxFileName = \"/Users/ffaiku/opt/FH/4 Semester/Verteilte Systeme/Project/smart-home-ui/smart-home-ui/src/components/Accordion/Accordion.tsx\";\nimport React, { Component, Children, cloneElement } from 'react';\nimport './Accordion.scss';\n\nclass Accordion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: -1\n    };\n\n    this.handleAccordionOnClick = index => {\n      this.setState(prev => ({\n        activeTab: prev.activeTab === index ? -1 : index\n      }));\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      this.setState({\n        activeTab: -1\n      });\n    }\n  }\n\n  createDiv() {\n    const {\n      id,\n      children,\n      allowMultipleOpen,\n      activeTab,\n      onActiveTabChange\n    } = this.props;\n    return Children.map(children, (children, index) => {\n      return cloneElement(children, {\n        index,\n        name: id,\n        key: index,\n        activeTab: onActiveTabChange ? activeTab : this.state.activeTab,\n        allowMultipleOpen: allowMultipleOpen,\n        handleAccordionOnClick: onActiveTabChange || this.handleAccordionOnClick.bind(this, index)\n      });\n    });\n  }\n\n  render() {\n    const {\n      id,\n      className\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"dl\", {\n      id: `${id}-accordion-id`,\n      className: `Accordion ${className ? className : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, this.createDiv());\n  }\n\n}\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/ffaiku/opt/FH/4 Semester/Verteilte Systeme/Project/smart-home-ui/smart-home-ui/src/components/Accordion/Accordion.tsx"],"names":["React","Component","Children","cloneElement","Accordion","state","activeTab","handleAccordionOnClick","index","setState","prev","componentDidUpdate","prevProps","name","props","createDiv","id","children","allowMultipleOpen","onActiveTabChange","map","key","bind","render","className"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,YAArC,QAAyD,OAAzD;AACA,OAAO,kBAAP;;AAiBA,MAAMC,SAAN,SAAwBH,SAAxB,CAAoE;AAAA;AAAA;AAAA,SAClEI,KADkE,GACzC;AAAEC,MAAAA,SAAS,EAAE,CAAC;AAAd,KADyC;;AAAA,SASlEC,sBATkE,GASxCC,KAAD,IAAmB;AAC1C,WAAKC,QAAL,CAAeC,IAAD,KAA4B;AACxCJ,QAAAA,SAAS,EAAEI,IAAI,CAACJ,SAAL,KAAmBE,KAAnB,GAA2B,CAAC,CAA5B,GAAgCA;AADH,OAA5B,CAAd;AAGD,KAbiE;AAAA;;AAGlEG,EAAAA,kBAAkB,CAACC,SAAD,EAA6B;AAC7C,QAAIA,SAAS,CAACC,IAAV,KAAmB,KAAKC,KAAL,CAAWD,IAAlC,EAAwC;AACtC,WAAKJ,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE,CAAC;AAAd,OAAd;AACD;AACF;;AAQDS,EAAAA,SAAS,GAAG;AACV,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,QAAN;AAAgBC,MAAAA,iBAAhB;AAAmCZ,MAAAA,SAAnC;AAA8Ca,MAAAA;AAA9C,QAAoE,KAAKL,KAA/E;AAEA,WAAOZ,QAAQ,CAACkB,GAAT,CAAaH,QAAb,EAAuB,CAACA,QAAD,EAAgBT,KAAhB,KAAkC;AAC9D,aAAOL,YAAY,CAACc,QAAD,EAAW;AAC5BT,QAAAA,KAD4B;AAE5BK,QAAAA,IAAI,EAAEG,EAFsB;AAG5BK,QAAAA,GAAG,EAAEb,KAHuB;AAI5BF,QAAAA,SAAS,EAAEa,iBAAiB,GAAGb,SAAH,GAAe,KAAKD,KAAL,CAAWC,SAJ1B;AAK5BY,QAAAA,iBAAiB,EAAEA,iBALS;AAM5BX,QAAAA,sBAAsB,EAAEY,iBAAiB,IAAI,KAAKZ,sBAAL,CAA4Be,IAA5B,CAAiC,IAAjC,EAAuCd,KAAvC;AANjB,OAAX,CAAnB;AAQD,KATM,CAAP;AAUD;;AAEDe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,EAAF;AAAMQ,MAAAA;AAAN,QAAoB,KAAKV,KAA/B;AAEA,wBACI;AAAI,MAAA,EAAE,EAAG,GAAEE,EAAG,eAAd;AAA8B,MAAA,SAAS,EAAG,aAAYQ,SAAS,GAAGA,SAAH,GAAe,EAAG,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,SAAL,EADH,CADJ;AAKD;;AAtCiE;;AAyCpE,eAAeX,SAAf","sourcesContent":["import React, { Component, Children, cloneElement } from 'react';\nimport './Accordion.scss';\n\nexport interface IAccordionState {\n  activeTab: number;\n}\n\ninterface IAccordionProps {\n  /** id prop */\n  id: string;\n  className?: string;\n  allowMultipleOpen?: boolean;\n  name?: string;\n  heading?: any;\n  activeTab?: number;\n  onActiveTabChange?: (index: number) => void;\n}\n\nclass Accordion extends Component<IAccordionProps, IAccordionState> {\n  state: IAccordionState = { activeTab: -1 };\n\n  componentDidUpdate(prevProps: IAccordionProps) {\n    if (prevProps.name !== this.props.name) {\n      this.setState({ activeTab: -1 });\n    }\n  }\n\n  handleAccordionOnClick = (index: number) => {\n    this.setState((prev: IAccordionState) => ({\n      activeTab: prev.activeTab === index ? -1 : index,\n    }));\n  };\n\n  createDiv() {\n    const { id, children, allowMultipleOpen, activeTab, onActiveTabChange } = this.props;\n\n    return Children.map(children, (children: any, index: number) => {\n      return cloneElement(children, {\n        index,\n        name: id,\n        key: index,\n        activeTab: onActiveTabChange ? activeTab : this.state.activeTab,\n        allowMultipleOpen: allowMultipleOpen,\n        handleAccordionOnClick: onActiveTabChange || this.handleAccordionOnClick.bind(this, index),\n      });\n    });\n  }\n\n  render() {\n    const { id, className } = this.props;\n\n    return (\n        <dl id={`${id}-accordion-id`} className={`Accordion ${className ? className : ''}`}>\n          {this.createDiv()}\n        </dl>\n    );\n  }\n}\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}