{"ast":null,"code":"var _jsxFileName = \"/Users/ffaiku/opt/FH/4 Semester/Verteilte Systeme/Project/smart-home-ui/smart-home-ui/src/components/Accordion/Accordion.tsx\";\nimport * as React from 'react';\nimport { Component, Children, cloneElement } from 'react';\n\nclass Accordion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: -1\n    };\n\n    this.handleAccordionOnClick = index => {\n      this.setState(prev => ({\n        activeTab: prev.activeTab === index ? -1 : index\n      }), () => {\n        this[`accordionItem${index}`].scrollIntoView();\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      this.setState({\n        activeTab: -1\n      });\n    }\n  }\n\n  createDiv() {\n    const {\n      id,\n      children,\n      allowMultipleOpen,\n      activeTab,\n      onActiveTabChange\n    } = this.props;\n    return Children.map(children, (children, index) => {\n      return cloneElement(children, {\n        index,\n        name: id,\n        key: index,\n        activeTab: onActiveTabChange ? activeTab : this.state.activeTab,\n        allowMultipleOpen: allowMultipleOpen,\n        handleAccordionOnClick: onActiveTabChange || this.handleAccordionOnClick.bind(this, index),\n        ref: e => {\n          this[`accordionItem${index}`] = e;\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      id,\n      className\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"dl\", {\n      id: `${id}-accordion-id`,\n      className: `Accordion ${className ? className : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, this.createDiv());\n  }\n\n}\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/ffaiku/opt/FH/4 Semester/Verteilte Systeme/Project/smart-home-ui/smart-home-ui/src/components/Accordion/Accordion.tsx"],"names":["React","Component","Children","cloneElement","Accordion","state","activeTab","handleAccordionOnClick","index","setState","prev","scrollIntoView","componentDidUpdate","prevProps","name","props","createDiv","id","children","allowMultipleOpen","onActiveTabChange","map","key","bind","ref","e","render","className"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,YAA9B,QAAgE,OAAhE;;AAgBA,MAAMC,SAAN,SAAwBH,SAAxB,CAAoE;AAAA;AAAA;AAAA,SAClEI,KADkE,GACzC;AAAEC,MAAAA,SAAS,EAAE,CAAC;AAAd,KADyC;;AAAA,SASlEC,sBATkE,GASxCC,KAAD,IAAmB;AAC1C,WAAKC,QAAL,CACGC,IAAD,KAA4B;AAC1BJ,QAAAA,SAAS,EAAEI,IAAI,CAACJ,SAAL,KAAmBE,KAAnB,GAA2B,CAAC,CAA5B,GAAgCA;AADjB,OAA5B,CADF,EAIE,MAAM;AACJ,aAAM,gBAAeA,KAAM,EAA3B,EAA8BG,cAA9B;AACD,OANH;AAQD,KAlBiE;AAAA;;AAGlEC,EAAAA,kBAAkB,CAACC,SAAD,EAA6B;AAC7C,QAAIA,SAAS,CAACC,IAAV,KAAmB,KAAKC,KAAL,CAAWD,IAAlC,EAAwC;AACtC,WAAKL,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE,CAAC;AAAd,OAAd;AACD;AACF;;AAaDU,EAAAA,SAAS,GAAG;AACV,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,QAAN;AAAgBC,MAAAA,iBAAhB;AAAmCb,MAAAA,SAAnC;AAA8Cc,MAAAA;AAA9C,QAAoE,KAAKL,KAA/E;AACA,WAAOb,QAAQ,CAACmB,GAAT,CAAaH,QAAb,EAAuB,CAACA,QAAD,EAAoDV,KAApD,KAAsE;AAClG,aAAOL,YAAY,CAACe,QAAD,EAAsD;AACvEV,QAAAA,KADuE;AAEvEM,QAAAA,IAAI,EAAEG,EAFiE;AAGvEK,QAAAA,GAAG,EAAEd,KAHkE;AAIvEF,QAAAA,SAAS,EAAEc,iBAAiB,GAAGd,SAAH,GAAe,KAAKD,KAAL,CAAWC,SAJiB;AAKvEa,QAAAA,iBAAiB,EAAEA,iBALoD;AAMvEZ,QAAAA,sBAAsB,EAAEa,iBAAiB,IAAI,KAAKb,sBAAL,CAA4BgB,IAA5B,CAAiC,IAAjC,EAAuCf,KAAvC,CAN0B;AAOvEgB,QAAAA,GAAG,EAAEC,CAAC,IAAI;AACR,eAAM,gBAAejB,KAAM,EAA3B,IAAgCiB,CAAhC;AACD;AATsE,OAAtD,CAAnB;AAWD,KAZM,CAAP;AAaD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,EAAF;AAAMU,MAAAA;AAAN,QAAoB,KAAKZ,KAA/B;AAEA,wBACE;AAAI,MAAA,EAAE,EAAG,GAAEE,EAAG,eAAd;AAA8B,MAAA,SAAS,EAAG,aAAYU,SAAS,GAAGA,SAAH,GAAe,EAAG,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,SAAL,EADH,CADF;AAKD;;AA7CiE;;AAgDpE,eAAeZ,SAAf","sourcesContent":["import * as React from 'react';\nimport { Component, Children, cloneElement, ReactElement } from 'react';\nimport { IAccordionItemParentProps } from './AccordionItem/AccordionItem';\n\ninterface IAccordionProps {\n  id: string;\n  className?: string;\n  allowMultipleOpen?: boolean;\n  name?: string;\n  activeTab?: number;\n  onActiveTabChange?: (index: number) => void;\n}\n\nexport interface IAccordionState {\n  activeTab: number;\n}\n\nclass Accordion extends Component<IAccordionProps, IAccordionState> {\n  state: IAccordionState = { activeTab: -1 };\n\n  componentDidUpdate(prevProps: IAccordionProps) {\n    if (prevProps.name !== this.props.name) {\n      this.setState({ activeTab: -1 });\n    }\n  }\n\n  handleAccordionOnClick = (index: number) => {\n    this.setState(\n      (prev: IAccordionState) => ({\n        activeTab: prev.activeTab === index ? -1 : index,\n      }),\n      () => {\n        this[`accordionItem${index}`].scrollIntoView();\n      }\n    );\n  };\n\n  createDiv() {\n    const { id, children, allowMultipleOpen, activeTab, onActiveTabChange } = this.props;\n    return Children.map(children, (children: ReactElement<IAccordionItemParentProps>, index: number) => {\n      return cloneElement(children as ReactElement<IAccordionItemParentProps>, {\n        index,\n        name: id,\n        key: index,\n        activeTab: onActiveTabChange ? activeTab : this.state.activeTab,\n        allowMultipleOpen: allowMultipleOpen,\n        handleAccordionOnClick: onActiveTabChange || this.handleAccordionOnClick.bind(this, index),\n        ref: e => {\n          this[`accordionItem${index}`] = e;\n        },\n      });\n    });\n  }\n\n  render() {\n    const { id, className } = this.props;\n\n    return (\n      <dl id={`${id}-accordion-id`} className={`Accordion ${className ? className : ''}`}>\n        {this.createDiv()}\n      </dl>\n    );\n  }\n}\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}