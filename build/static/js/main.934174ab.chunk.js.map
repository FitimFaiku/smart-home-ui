{"version":3,"sources":["api/ApiMethodEnum.tsx","components/Header/header-menu.tsx","constants/routes.tsx","components/Header/Header.tsx","api/makeRequest.tsx","api/blind/Blind.api.tsx","components/Icon/Icon.tsx","utility/formatHandler.tsx","components/Card/Card.tsx","components/Card/CardHeader/CardHeader.tsx","components/Card/CardBody/CardBody.tsx","components/BlindComponent/BlindComponent.tsx","components/Section/Section.tsx","container/Blind/Blind.tsx","container/Weather/Weather.tsx","api/light/Light.api.tsx","components/LightComponent/LightComponent.tsx","container/Light/Light.tsx","components/Accordion/AccordionItem/AccordionItem.tsx","components/Accordion/Accordion.tsx","container/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Method","HEADER_MENU","items","name","to","id","Header","map","item","className","key","exact","activeClassName","this","renderHelperCreateMenu","React","AbstractRequestApi","defaultHeader","Accept","url","method","body","headers","newHeaders","_addHeader","timeoutWrapper","getTimeout","fetch","JSON","stringify","response","ok","json","errorMsg","Error","then","data","checkForErrorData","console","log","errors","Promise","reject","optionalHeaders","Object","keys","forEach","millis","promise","resolve","timeoutId","setTimeout","res","clearTimeout","err","blind","_makeRequest","POST","DELETE","value","getBlinds","GET","Icon","icon","props","cacheRequests","src","classy","classNameArray","filter","join","Card","active","plain","children","classes","background","selected","Children","child","idx","type","cloneElement","augmentChildren","CardHeader","badgeClass","title","badge","badgeType","srOnly","srOnlyTitle","aria-describedby","CardBody","customClass","aria-live","BlindComponent","useState","inputValue","setInputValue","isEditMode","setEditMode","description","positionInPercent","onDelete","onSubmit","event","a","onNewValueSubmit","onClickDown","onClickUp","onClick","pattern","min","max","onChange","target","Section","state","isEnlarged","onImageLoaded","imgTransitionToSmallOnMount","setState","handleFigureImage","color","img","alt","figcaption","removePaddingTop","removePaddingBottom","iconBeforeTitle","backLink","linkText","handleClick","sectionClassName","other","modifier","addClass","rootClasses","imgClasses","titleBoxClasses","sectionContentClasses","onLoad","tabIndex","Component","Blind","blindObjects","setBlindObjects","inputDescription","setInputDescription","useEffect","fetchBlinds","BlindApi","newArray","obj","deleteBlind","e","preventDefault","undefined","addBlind","setBlindPosition","handleChange","blindObject","i","createBlinds","Weather","getLights","LightComponent","inputDimmingValue","setInputDimmingValue","dimmingValue","Light","lightObjects","setLightObjects","fetchLights","LightApi","deleteLight","light","addLight","setLightDimmingValue","onClickParty","onClickSleep","lightObject","createLights","AccordionItem","open","accordionItemRef","createRef","handleAccordionOnClick","prevState","allowMultipleOpen","activeTab","index","titleDescription","errorMessage","isActive","buttonClasses","push","button","aria-expanded","aria-controls","ref","hidden","Accordion","prev","scrollIntoView","prevProps","onActiveTabChange","bind","createDiv","Home","heading","App","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.934174ab.chunk.js","sourcesContent":["export enum Method {\n  POST = 'POST',\n  PUT = 'PUT',\n  GET = 'GET',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n}\n","import {BLIND, LANDING, LIGHT, WEATHER} from \"../../constants/routes\";\n\nexport const HEADER_MENU = {\n  items: [\n    {\n      name: 'Home',\n      to: LANDING,\n      id: 'header-landing-link-id',\n    },\n    {\n      name: 'Weather',\n      to: WEATHER,\n      id: 'header-weather-link-id',\n    },\n    {\n      name: 'Light',\n      to: LIGHT,\n      id: 'header-light-link-id',\n    },\n    {\n      name: 'Blind',\n      to: BLIND,\n      id: 'header-blind-link-id',\n    },\n  ],\n};\n","export const LANDING = '/';\nexport const LIGHT = '/light';\nexport const BLIND = '/blind';\nexport const WEATHER = '/weather';\n","import * as React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { HEADER_MENU } from './header-menu';\n\nexport default class Header extends React.Component<{}, {}> {\n    renderHelperCreateMenu() {\n        // Remove menu item from Navigation Bar if user is not allowed to see.\n        var visibleNavigationItems = HEADER_MENU.items;\n        return visibleNavigationItems.map(item => {\n            return (\n                <li className={'Header__menu-item'} key={item.id}>\n                    <NavLink\n                        to={item.to}\n                        id={item.id}\n                        exact={true}\n                        className={'Header__link'}\n                        activeClassName={'Header__link Header__link--selected'}\n                    >\n                        {item.name}\n                    </NavLink>\n                </li>\n            );\n        });\n    }\n\n  public render() {\n    return (\n        <header className=\"Header\">\n          <nav className=\"Header__menu\">\n            <ul className=\"Header__menu-list\">{this.renderHelperCreateMenu()}</ul>\n          </nav>\n          <div className=\"Header__decoration\" />\n        </header>\n    );\n  }\n}\n","import { Method } from './ApiMethodEnum';\n\nexport class AbstractRequestApi {\n\n  defaultHeader = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*',\n  };\n\n  async _makeRequest<T>( url: string, method: Method, body?: any, headers?: any): Promise<T> {\n    const newHeaders = this._addHeader(headers);\n\n    try {\n      const response = await this.timeoutWrapper(\n        this.getTimeout(),\n        fetch(url, {\n          headers: newHeaders,\n          body: JSON.stringify(body),\n          method,\n        })\n      );\n\n      if (!response.ok) {\n        const errorMsg: string = await response.json();\n        throw new Error(errorMsg);\n      }\n      return response.json().then((data: any) => this.checkForErrorData(data));\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n\n  getTimeout(): number {\n    return 50000;\n  }\n\n  checkForErrorData(data: any) {\n    if (data.errors) {\n      return Promise.reject(new Error(data.errors));\n    }\n    return data;\n  }\n\n  _addHeader(optionalHeaders?: string[]): any {\n    const headers = this.defaultHeader;\n\n    if (optionalHeaders) {\n      Object.keys(optionalHeaders).forEach(key => (headers[key] = optionalHeaders[key]));\n    }\n    return headers;\n  }\n\n\n  timeoutWrapper(millis: number, promise): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        reject(new Error(\"Error\"));\n      }, millis);\n      promise.then(\n        res => {\n          clearTimeout(timeoutId);\n          resolve(res);\n        },\n        err => {\n          clearTimeout(timeoutId);\n          reject(err);\n        }\n      );\n    });\n  }\n}\n","import {AbstractRequestApi} from '../makeRequest';\nimport {Method} from \"../ApiMethodEnum\";\nimport {IBlindInterface} from \"./Blind.interface\";\n\nexport class BlindApi extends AbstractRequestApi {\n\n  addBlind(blind:IBlindInterface){\n    return this._makeRequest(\"/blind/add\", Method.POST, blind)\n  }\n\n  deleteBlind(id:String){\n    return this._makeRequest(`/blind/delete/${id}`, Method.DELETE)\n  }\n\n  setBlindPosition(id:String, value:number):Promise<any> {\n    return this._makeRequest(`/blind/position/${id}/${value}`, Method.POST)\n  }\n\n  fetchBlinds():Promise<any> {\n    return this.getBlinds()\n  }\n  private getBlinds():Promise<Response> {\n    console.log(\"Bin Hier\");\n    return this._makeRequest(\"/blind/all\",Method.GET);\n  }\n\n}\n\nexport default new BlindApi();\n","import * as React from 'react';\nimport SVG from 'react-inlinesvg';\n\n// @ts-ignore\nconst Icon = ({ icon, ...props }) => {\n  return <SVG cacheRequests={true} src={'/icons/' + icon + '.svg'} {...props}/>;\n};\n\nexport default Icon;\n","export const classy = (classNameArray: (string | null)[]): string => classNameArray.filter(className => className).join(' ');\n","import React, { Component } from 'react';\nimport CardHeader from './CardHeader/CardHeader';\nimport CardBody from './CardBody/CardBody';\nimport { classy } from '../../utility/formatHandler';\n\ninterface ICardProps {\n  id: string;\n  active?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  selected?: number;\n  plain?: boolean;\n  background?: boolean;\n}\n\nconst Card : React.FC<ICardProps> = props => {\n\n  const augmentChildren = (children) => {\n    const { id, selected } = props;\n    return React.Children.map(children, (child, idx) => {\n      if (typeof child.type === 'function') {\n        return React.cloneElement(child, {\n          id,\n          key: `${id}-${idx}`,\n          selected,\n        });\n      } else {\n        return React.cloneElement(child, {\n          key: `${id}-${idx}`,\n        });\n      }\n    });\n  };\n  const {\n    id,\n    active,\n    className,\n    plain,\n    children,\n    background\n  } = props;\n\n  const classes = [\n    'Card',\n    active ? 'Card--active' : null,\n    className || null,\n    plain ? 'Card--plain' : null,\n    background ? 'Card--background' : null,\n  ];\n\n  return(\n      <article id={`${id}-card-id`} className={classy(classes)}>\n        {augmentChildren(children)}\n      </article>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { ICardHeaderProps } from './CardHeader.interface';\nimport Icon from '../../Icon/Icon';\n\nconst CardHeader = (props: ICardHeaderProps) => {\n  const { icon, title, badge, badgeType, id, children, srOnly, srOnlyTitle } = props;\n\n  let badgeClass;\n  switch (badgeType) {\n    case 'red':\n      badgeClass = 'Card__badge--red';\n      break;\n    case 'green':\n      badgeClass = 'Card__badge--green';\n      break;\n    case 'grey':\n    default:\n      badgeClass = 'Card__badge--grey';\n  }\n\n  return (\n    <header className={`Card__header ${srOnly ? 'sr-only' : ''}`}>\n      {badge && (\n        <span className={`Card__badge ${badgeClass}`} id={`${id}-badge-id`}>\n          {badge}\n        </span>\n      )}\n      <div className=\"Card__container\">\n        {icon && (\n          <div className=\"Card__icon\">\n            <Icon icon={icon} />\n          </div>\n        )}\n        <h3 className=\"Card__title\" aria-describedby={badge ? `${id}-badge-id` : null}>\n          {title}\n          {srOnlyTitle && <span className={'sr-only'}>{srOnlyTitle}</span>}\n        </h3>\n        <div className=\"Card__actions\">{children}</div>\n      </div>\n    </header>\n  );\n};\n\nexport default CardHeader;\n","import React from 'react';\n\ninterface ICardBodyProps {\n  children?: any;\n  id?: string;\n  selected?: number;\n  customClass?: string;\n}\n\nconst CardBody = (props: ICardBodyProps) => {\n  const { children, customClass } = props;\n\n  return (\n    <div className={`Card__body ${customClass || ''}`} aria-live=\"polite\">\n      {children}\n    </div>\n  );\n};\n\nexport default CardBody;\n","import * as React from 'react';\nimport Icon from \"../Icon/Icon\";\nimport Card from \"../Card/Card\";\nimport CardHeader from \"../Card/CardHeader/CardHeader\";\nimport CardBody from \"../Card/CardBody/CardBody\";\nimport {useState} from \"react\";\nimport BlindApi from \"../../api/blind/Blind.api\";\n\nexport interface IBlindProps {\n  id: string;\n  description: string;\n  positionInPercent: number;\n  onClick?: (e:any) => void;\n    onNewValueSubmit?: (id:string, value:number) => void;\n  onDelete?: (id:string) => void;\n}\n\nconst BlindComponent: React.FC<IBlindProps> = props => {\n\n    const [inputValue, setInputValue] = useState<number>();\n    const [isEditMode, setEditMode] = useState<boolean>(false);\n    const {\n        id,\n        description,\n        positionInPercent,\n        onDelete,\n    } = props;\n\n    const className = \"\";\n\n    const handleChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    const onClickEdit = () =>{\n        setEditMode(!isEditMode);\n    };\n\n    const onSubmit= async (event) => {\n        setEditMode(false);\n        props.onNewValueSubmit(id,inputValue)\n    };\n    const onClickDown= async (event) => {\n        if(positionInPercent-5<0){\n            props.onNewValueSubmit(id,0);\n        } else {\n            props.onNewValueSubmit(id,positionInPercent - 5)\n        }\n    };\n    const onClickUp= async (event) => {\n        if(positionInPercent+5>=100){\n            props.onNewValueSubmit(id,100);\n        } else {\n            props.onNewValueSubmit(id,positionInPercent + 5);\n        }\n\n    };\n\n    return(\n        <Card id={\"blindcomponent-${id}\"} plain={true}>\n            <CardHeader title={description} icon={\"blinds\"}>\n                <button onClick={onClickUp}>\n                    <Icon icon={\"plus\"}/>\n                </button>\n                <button onClick={onClickDown}>\n                    <Icon icon={\"minus\"}/>\n                </button>\n                <button className={\"BlindHeader__settingsButton\"} onClick={onClickEdit}>\n                    <Icon icon={\"settings\"}/>\n                </button>\n                <button className={\"BlindHeader__deleteButton\"} onClick={() => onDelete(id)}>\n                    <Icon icon={\"deleteIcon\"}/>\n                </button>\n            </CardHeader>\n            <CardBody>Position in percent: {positionInPercent}%\n                {isEditMode && <form onSubmit={onSubmit}>\n                    <label>\n                        Input the new blind value you want to have :\n                        <input pattern=\"[0-9]*\" min=\"0\" max=\"100\" type=\"number\" value={inputValue} onChange={handleChange}/>\n                    </label>\n                    <input type=\"submit\" value={\"submit\"}/>\n                </form>}\n            </CardBody>\n        </Card>\n    )\n\n};\n\n\nexport default BlindComponent;\n","import React, { Component } from 'react';\nimport Icon from '../Icon/Icon';\nimport { classy } from '../../utility/formatHandler';\n\nexport interface ISectionProps {\n  id: string;\n  className?: string;\n  color?: string;\n  title?: string;\n  children?: React.ReactNode;\n  srOnly?: boolean;\n  imgTransitionToSmallOnMount?: boolean;\n  img?: string;\n  alt?: string;\n  figcaption?: string;\n  removePaddingTop?: boolean;\n  removePaddingBottom?: boolean;\n  backLink?: boolean;\n  linkText?: string;\n  icon?: string;\n  sectionClassName?: string;\n  iconBeforeTitle?: string;\n  handleClick?: () => void;\n}\n\nexport interface ISectionState {\n  isEnlarged: boolean;\n}\n\nclass Section extends Component<ISectionProps, ISectionState> {\n  state: ISectionState = { isEnlarged: false };\n\n  onImageLoaded = () => {\n    if (this.props.imgTransitionToSmallOnMount) {\n      this.setState({ isEnlarged: false });\n    }\n  };\n\n  componentDidMount(): void {\n    if (this.props.imgTransitionToSmallOnMount) {\n      this.setState({ isEnlarged: true });\n    }\n  }\n\n  handleFigureImage = () => {\n    this.setState({ isEnlarged: !this.state.isEnlarged });\n  };\n\n  render() {\n    const { isEnlarged } = this.state;\n\n    const {\n      id,\n      color,\n      className,\n      img,\n      alt,\n      title,\n      children,\n      srOnly,\n      figcaption,\n      removePaddingTop,\n      removePaddingBottom,\n      backLink,\n      linkText,\n      handleClick,\n      iconBeforeTitle,\n      icon,\n      sectionClassName,\n      ...other\n    } = this.props;\n\n    let modifier = '';\n    if (color === 'warmgrey') {\n      modifier = 'Section--warmgrey';\n    }\n\n    let addClass = '';\n    if (className) {\n      addClass = className;\n    }\n\n    const paddingTop = removePaddingTop ? '' : 'Section__padding-top';\n    const paddingBottom = removePaddingBottom ? '' : 'Section__padding-bottom';\n\n    const rootClasses = [\n      'Section',\n      modifier || null,\n      paddingTop || null,\n      paddingBottom || null,\n      sectionClassName || null,\n    ];\n\n    const imgClasses = ['Section__image', isEnlarged ? 'Section__image--enlarged' : null];\n\n    const titleBoxClasses = ['Section__title-box', srOnly ? 'sr-only' : null];\n\n    const sectionContentClasses = ['Section__content', addClass || null];\n\n    return (\n      <>\n        {img ? (\n          <figure className={`Section__image-box`} onClick={this.handleFigureImage}>\n            <img\n              id={'section-image-id'}\n              className={classy(imgClasses)}\n              src={img}\n              alt={alt}\n              {...other}\n              onClick={this.handleFigureImage}\n              onLoad={this.onImageLoaded}\n            />\n            <figcaption>{figcaption}</figcaption>\n          </figure>\n        ) : null}\n        {icon && (\n          <div className=\"Section__icon-container\">\n            <Icon icon={icon} />\n          </div>\n        )}\n        <section id={`${id}-section-id`} className={classy(rootClasses)}>\n          {iconBeforeTitle && (\n            <div className=\"Section__icon-container\">\n              <Icon icon={iconBeforeTitle} />\n            </div>\n          )}\n          {title ? (\n            <div className={classy(titleBoxClasses)}>\n              <h2 id={`${id}-section-title-id`} className=\"Section__title\" tabIndex={-1}>\n                {title}\n              </h2>\n            </div>\n          ) : null}\n          <div className={classy(sectionContentClasses)}>{children}</div>\n          {modifier ? <div className=\"Section__background\" /> : null}\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Section;\n","import * as React from 'react';\nimport BlindApi from \"../../api/blind/Blind.api\";\nimport {IBlindInterface} from \"../../api/blind/Blind.interface\";\nimport BlindComponent from \"../../components/BlindComponent/BlindComponent\";\nimport {useEffect, useState} from \"react\";\nimport Section from \"../../components/Section/Section\";\n\nconst Blind: React.FC = () => {\n  const [blindObjects, setBlindObjects] = useState<IBlindInterface[]>();\n  const [wantsToAdd, setWantsToAdd] = useState<boolean>(true);\n  const [inputDescription, setInputDescription] = useState<string>();\n  const [inputValue, setInputValue] = useState<number>();\n\n  useEffect(() => {\n    fetchBlinds();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const fetchBlinds = async () => {\n    const response:IBlindInterface[] = await BlindApi.fetchBlinds();\n    setBlindObjects(response)\n  };\n\n  const onDelete = async (id:string) => {\n    const newArray = blindObjects.filter(obj =>{\n      return obj.id != id;\n    });\n    console.log(\"New Array \", newArray);\n    setBlindObjects(newArray);\n    await BlindApi.deleteBlind(id);\n\n  };\n\n  const createBlinds = () => {\n    if(blindObjects!= undefined && blindObjects != null){\n      return blindObjects.map((blindObject:IBlindInterface, i) => {\n        return <BlindComponent key={i} id={blindObject.id} description={blindObject.description} positionInPercent={blindObject.positionInPercent} onDelete={onDelete} onNewValueSubmit={onNewValueSubmit}/>;\n      });\n    }\n\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"des\", inputDescription);\n    if(inputDescription !== undefined && inputDescription !== \"\"){\n      const blind:IBlindInterface = {\n        description :inputDescription,\n        positionInPercent:inputValue\n      };\n      await BlindApi.addBlind(blind);\n      await fetchBlinds();\n    }\n  };\n\n  const onNewValueSubmit = async (id:string, value:number) => {\n    console.log(\"Bin hier onNewValueSubmit\");\n    const newArray:IBlindInterface[] = blindObjects.map(obj => {\n      if(obj.id === id){\n        obj.positionInPercent = value;\n      }\n      return obj\n    });\n    setBlindObjects(newArray);\n    await BlindApi.setBlindPosition(id, value);\n\n\n  };\n\n  const handleChange = (event) => {\n    if(event.target != null && event.target.name === \"inputDescription\"){\n      setInputDescription(event.target.value)\n    }\n    if(event.target != null && event.target.name === \"inputValue\"){\n      setInputValue(event.target.value)\n    }\n  };\n\n  return (\n      <Section id={\"Blind\"} title={\"Blinds\"} color={\"warmgrey\"}>\n\n        <form onSubmit={onSubmit}>\n          <div className={\"Blind__form\"}>\n            <div>\n              <label>\n                Input the description of the Blind:\n              </label>\n              <input name=\"inputDescription\" type=\"text\" value={inputDescription} onChange={handleChange}/>\n            </div>\n            <div>\n              <label>\n                Input the initial value of the Blinds (0-100):\n              </label>\n              <input pattern=\"[0-9]*\" min=\"0\" max=\"100\"  name=\"inputValue\" type=\"number\" value={inputValue} onChange={handleChange}/>\n            </div>\n            <div>\n              <input type=\"submit\" value={\"Add new Blind\"}/>\n            </div>\n          </div>\n        </form>\n        {createBlinds()}\n      </Section>\n  );\n\n\n\n};\n\nexport default Blind;\n","import * as React from 'react';\n\n\nconst Weather: React.FC = () => {\n\n  return (\n      <div> Hello from Weather </div>\n  );\n};\n\nexport default Weather;\n","import {AbstractRequestApi} from '../makeRequest';\nimport {Method} from \"../ApiMethodEnum\";\nimport {ILightInterface} from \"./Light.interface\";\n\nexport class LightApi extends AbstractRequestApi {\n\n  fetchLights():Promise<any> {\n    return this.getLights()\n  }\n\n  private getLights():Promise<Response> {\n    return this._makeRequest(\"/light/all\",Method.GET);\n  }\n\n  addLight(blind:ILightInterface){\n    return this._makeRequest(\"/light/add\", Method.POST, blind)\n  }\n\n  deleteLight(id:String){\n    return this._makeRequest(`/light/delete/${id}`, Method.DELETE)\n  }\n\n  setLightDimmingValue(id:String, value:number):Promise<any> {\n    return this._makeRequest(`/light/value/${id}/${value}`, Method.POST)\n  }\n\n}\n\nexport default new LightApi();\n","import * as React from 'react';\nimport SVG from 'react-inlinesvg';\nimport Icon from \"../Icon/Icon\";\nimport {useState} from \"react\";\nimport Card from \"../Card/Card\";\nimport CardHeader from \"../Card/CardHeader/CardHeader\";\nimport CardBody from \"../Card/CardBody/CardBody\";\n\nexport interface ILightComponentProps {\n  id: string;\n  description: string;\n  dimmingValue: number;\n  onClick?: (e) => void;\n  onNewValueSubmit?: (id:string, value:number) => void;\n  onDelete?: (id:string) => void;\n}\n\nconst LightComponent: React.FC<ILightComponentProps> = props => {\n\n    const [inputDimmingValue, setInputDimmingValue] = useState<number>();\n    const [isEditMode, setEditMode] = useState<boolean>(false);\n    const {\n        id,\n        description,\n        dimmingValue,\n        onDelete,\n    } = props;\n\n    const className = \"\";\n\n    const handleChange = (event) => {\n        setInputDimmingValue(event.target.value);\n    };\n\n    const onClickEdit = () =>{\n        setEditMode(!isEditMode);\n    };\n\n    const onSubmit= async (event) => {\n        setEditMode(false);\n        props.onNewValueSubmit(id,inputDimmingValue)\n    };\n    const onClickDown= async (event) => {\n        if(dimmingValue-5<0){\n            props.onNewValueSubmit(id,0);\n        } else {\n            props.onNewValueSubmit(id,dimmingValue - 5)\n        }\n    };\n    const onClickUp= async (event) => {\n        if(dimmingValue+5>=100){\n            props.onNewValueSubmit(id,100);\n        } else {\n            props.onNewValueSubmit(id,dimmingValue + 5);\n        }\n\n    };\n\n    const iconText  = () => {\n        if(dimmingValue>=70 && dimmingValue<=100){\n            return \"party\";\n        }\n        if(dimmingValue>=1 && dimmingValue<=70){\n            return \"lightOn\";\n        }\n        if(dimmingValue>=1 && dimmingValue<=70){\n            return \"lightOff\";\n        }\n        return \"lightOff\"\n    };\n    return(\n        <Card id={\"blindcomponent-${id}\"} plain={true}>\n            <CardHeader title={description} icon={iconText()}>\n                <button onClick={onClickUp}>\n                    <Icon icon={\"plus\"}/>\n                </button>\n                <button onClick={onClickDown}>\n                    <Icon icon={\"minus\"}/>\n                </button>\n                <button className={\"BlindHeader__settingsButton\"} onClick={onClickEdit}>\n                    <Icon icon={\"settings\"}/>\n                </button>\n                <button className={\"BlindHeader__deleteButton\"} onClick={() => onDelete(id)}>\n                    <Icon icon={\"deleteIcon\"}/>\n                </button>\n            </CardHeader>\n            <CardBody>Dimming value: {dimmingValue}%\n                {isEditMode && <form onSubmit={onSubmit}>\n                    <label>\n                        Input the new dimming value you want to have for the light:\n                        <input pattern=\"[0-9]*\" min=\"0\" max=\"100\" type=\"number\" value={inputDimmingValue} onChange={handleChange}/>\n                    </label>\n                    <input type=\"submit\" value={\"submit\"}/>\n                </form>}\n            </CardBody>\n        </Card>\n    )\n\n};\n\n\nexport default LightComponent;\n","import * as React from 'react';\nimport {useState} from \"react\";\nimport {IBlindInterface} from \"../../api/blind/Blind.interface\";\nimport {useEffect} from \"react\";\nimport BlindApi from \"../../api/blind/Blind.api\";\nimport BlindComponent from \"../../components/BlindComponent/BlindComponent\";\nimport Section from \"../../components/Section/Section\";\nimport {ILightInterface} from \"../../api/light/Light.interface\";\nimport LightApi from \"../../api/light/Light.api\";\nimport LightComponent from \"../../components/LightComponent/LightComponent\";\nimport Icon from \"../../components/Icon/Icon\";\nimport CardHeader from \"../../components/Card/CardHeader/CardHeader\";\n\n\nconst Light: React.FC = () => {\n  const [lightObjects, setLightObjects] = useState<ILightInterface[]>();\n  const [wantsToAdd, setWantsToAdd] = useState<boolean>(true);\n  const [inputDescription, setInputDescription] = useState<string>();\n  const [inputValue, setInputValue] = useState<number>();\n\n  useEffect(() => {\n    fetchLights();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const fetchLights = async () => {\n    const response:ILightInterface[] = await LightApi.fetchLights();\n    setLightObjects(response)\n  };\n\n  const onDelete = async (id:string) => {\n    const newArray = lightObjects.filter(obj =>{\n      return obj.id != id;\n    });\n    console.log(\"New Array \", newArray);\n    setLightObjects(newArray);\n    await LightApi.deleteLight(id);\n\n  };\n\n  const createLights = () => {\n    if(lightObjects!= undefined && lightObjects != null){\n      return lightObjects.map((lightObject:ILightInterface, i) => {\n        return <LightComponent key={i} id={lightObject.id} description={lightObject.description} dimmingValue={lightObject.dimmingValue} onDelete={onDelete} onNewValueSubmit={onNewValueSubmit}/>;\n      });\n    }\n\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if(inputDescription !== undefined && inputDescription !== \"\"){\n      const light:ILightInterface = {\n        description :inputDescription,\n        dimmingValue:inputValue\n      };\n      await LightApi.addLight(light);\n      await fetchLights();\n      setInputDescription(\"\");\n    }\n  };\n\n  const onNewValueSubmit = async (id:string, value:number) => {\n    console.log(\"Bin hier onNewValueSubmit\");\n    const newArray:ILightInterface[] = lightObjects.map(obj => {\n      if(obj.id === id){\n        obj.dimmingValue = value;\n      }\n      return obj\n    });\n    setLightObjects(newArray);\n    await LightApi.setLightDimmingValue(id, value);\n\n\n\n  };\n\n  const handleChange = (event) => {\n    if(event.target != null && event.target.name === \"inputDescription\"){\n      setInputDescription(event.target.value)\n    }\n    if(event.target != null && event.target.name === \"inputValue\"){\n      setInputValue(event.target.value)\n    }\n  };\n\n  const onClickParty=  async () => {\n    lightObjects.map(  async (obj) => {\n      await onNewValueSubmit(obj.id, 77);\n    })\n  };\n\n  const onClickSleep=  async () => {\n    lightObjects.map(  async (obj) => {\n      await onNewValueSubmit(obj.id, 0);\n    })\n  };\n\n  return (\n      <Section id={\"Light\"} title={\"Lights\"} color={\"warmgrey\"}>\n        <div className={\"Light__mode_buttons\"}>\n          <button onClick={onClickParty}>Start Party mode\n          </button>\n          <button onClick={onClickSleep}>Start Sleep mode\n          </button>\n        </div>\n          <form onSubmit={onSubmit}>\n            <div className={\"Light__form\"}>\n              <div>\n                <label>\n                  Input the description of the Light:\n                </label>\n                  <input name=\"inputDescription\" type=\"text\" value={inputDescription} onChange={handleChange}/>\n              </div>\n              <div>\n                <label>\n                  Input the initial dimming value of the Light (0-100):\n                </label>\n                  <input pattern=\"[0-9]*\" min=\"0\" max=\"100\"  name=\"inputValue\" type=\"number\" value={inputValue} onChange={handleChange}/>\n              </div>\n              <div>\n                <input type=\"submit\" value={\"Add new Light\"}/>\n              </div>\n            </div>\n          </form>\n\n        {createLights()}\n      </Section>\n  );\n\n\n\n};\n\nexport default Light;\n","import React, { Component } from 'react';\nimport Icon from '../../Icon/Icon';\nimport { classy } from '../../../utility/formatHandler';\n\nexport interface IAccordionItemProps {\n  title: string | JSX.Element;\n  titleDescription?: string | JSX.Element;\n  children: React.ReactNode;\n  errorMessage?: {\n    title: string;\n    description?: string;\n  };\n  icon?: string;\n}\n\nexport interface IAccordionItemParentProps {\n  handleAccordionOnClick?: any;\n  activeTab?: number;\n  allowMultipleOpen?: boolean;\n  index?: number;\n  name?: string;\n  ref?: any;\n}\n\nexport interface IAccordionItemState {\n  open: boolean;\n}\n\nclass AccordionItem extends Component<IAccordionItemProps & IAccordionItemParentProps, IAccordionItemState> {\n  state: IAccordionItemState = { open: false };\n\n  accordionItemRef = React.createRef<HTMLDivElement>();\n\n  handleAccordionOnClick = () => {\n    this.setState((prevState: IAccordionItemState) => ({\n      open: !prevState.open,\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      name,\n      allowMultipleOpen,\n      activeTab,\n      icon,\n      index,\n      handleAccordionOnClick,\n      title,\n      titleDescription,\n      errorMessage,\n    } = this.props;\n    const isActive = allowMultipleOpen ? this.state.open : activeTab === index;\n\n    const buttonClasses = ['Accordion__button'];\n    if(isActive){\n      buttonClasses.push(\"Accordion__button--open\")\n    }\n\n    const ddClasses = ['Accordion__item-content'];\n\n    const button = (\n      <button\n        className={classy(buttonClasses)}\n        aria-expanded={isActive}\n        aria-controls={`${name}-accordion-dd-${index}-id`}\n        onClick={allowMultipleOpen ? () => this.handleAccordionOnClick() : () => handleAccordionOnClick(index)}\n      >\n        <span className=\"Accordion__button-title\">\n          {icon && <Icon className={'Accordion__icon--optional'} icon={icon} />}\n          <span>\n            {titleDescription && <strong className=\"Accordion__button-title-header\">{titleDescription}</strong>}\n            {title}\n            {errorMessage && (\n              <span className={`Accordion__error-message`}>\n                <strong>Achtung</strong>: {errorMessage.title}\n              </span>\n            )}\n          </span>\n          <Icon icon={isActive ? 'minus' : 'plus'} />\n        </span>\n        {isActive && errorMessage && <span className={`Accordion__error-description`}>{errorMessage.description}</span>}\n      </button>\n    );\n\n    return (\n      <div className={'Accordion__item'} key={`${name}-${index}`} ref={this.accordionItemRef}>\n        <dt className={'Accordion__item-header'}>{button}</dt>\n        <dd id={`${name}-accordion-dd-${index}-id`} className={classy(ddClasses)} hidden={!isActive}>\n          {children}\n        </dd>\n      </div>\n    );\n  }\n}\n\nexport default AccordionItem;\n","import React, { Component, Children, cloneElement, ReactElement } from 'react';\nimport { IAccordionItemParentProps } from './AccordionItem/AccordionItem';\n\ninterface IAccordionProps {\n  /** id prop */\n  id: string;\n  className?: string;\n  allowMultipleOpen?: boolean;\n  name?: string;\n  heading?: any;\n  activeTab?: number;\n  onActiveTabChange?: (index: number) => void;\n}\n\nexport interface IAccordionState {\n  activeTab: number;\n}\n\nclass Accordion extends Component<IAccordionProps, IAccordionState> {\n  state: IAccordionState = { activeTab: -1 };\n\n  componentDidUpdate(prevProps: IAccordionProps) {\n    if (prevProps.name !== this.props.name) {\n      this.setState({ activeTab: -1 });\n    }\n  }\n\n  handleAccordionOnClick = (index: number) => {\n    this.setState(\n      (prev: IAccordionState) => ({\n        activeTab: prev.activeTab === index ? -1 : index,\n      }),\n      () => {\n        this[`accordionItem${index}`].scrollIntoView();\n      }\n    );\n  };\n\n  createDiv() {\n    const { id, children, allowMultipleOpen, activeTab, onActiveTabChange } = this.props;\n\n    return Children.map(children, (children: any, index: number) => {\n      return cloneElement(children, {\n        index,\n        name: id,\n        key: index,\n        activeTab: onActiveTabChange ? activeTab : this.state.activeTab,\n        allowMultipleOpen: allowMultipleOpen,\n        handleAccordionOnClick: onActiveTabChange || this.handleAccordionOnClick.bind(this, index),\n        ref: e => {\n          this[`accordionItem${index}`] = e;\n        },\n      });\n    });\n  }\n\n  render() {\n    const { id, className } = this.props;\n\n    return (\n      <dl id={`${id}-accordion-id`} className={`Accordion ${className ? className : ''}`}>\n        {this.createDiv()}\n      </dl>\n    );\n  }\n}\n\nexport default Accordion;\n","import * as React from 'react';\nimport AccordionItem from \"../../components/Accordion/AccordionItem/AccordionItem\";\nimport Accordion from \"../../components/Accordion/Accordion\";\nimport Light from \"../Light/Light\";\nimport Blind from \"../Blind/Blind\";\n\n\nconst Home: React.FC = () => {\n\n  return (\n      <div>\n        <Accordion id={'home-page'} name={'Lights'} allowMultipleOpen={true} heading={\"Hello\"}>\n\n          <AccordionItem name={'Weather'} title=\"Weather\" icon={\"weather\"}>\n            <p>Hello Accordion Item 2</p>\n          </AccordionItem>\n            <AccordionItem\n                name={'Light'}\n                title={'Lights'}\n                icon={'lights'}\n            >\n                <Light />\n            </AccordionItem>\n          <AccordionItem name={'Blinds'} title=\"Blinds\" icon={\"blinds\"}>\n            <Blind />\n          </AccordionItem>\n        </Accordion>\n      </div>\n  );\n};\n\nexport default Home;\n","import * as React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Blind from \"./container/Blind/Blind\";\nimport {BLIND, LIGHT, WEATHER} from \"./constants/routes\";\nimport Weather from \"./container/Weather/Weather\";\nimport Light from \"./container/Light/Light\";\nimport Home from \"./container/Home/Home\";\n\nfunction App() {\n  return (\n      <Router>\n        <>\n        <Header />\n          <main id=\"app-main-id\">\n              <Route exact={true} key=\"route-1\" path={'/'}>\n                  <Home />\n              </Route>\n            <Route exact={true} key=\"route-2\" path={WEATHER}>\n              <Weather />\n            </Route>\n            <Route exact key=\"route-3\" path={BLIND}>\n              <Blind />\n            </Route>\n            <Route exact key=\"route-4\" path={LIGHT}>\n              <Light />\n            </Route>\n          </main>\n        </>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n/* tslint:disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}