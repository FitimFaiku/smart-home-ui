{"version":3,"sources":["api/ApiMethodEnum.tsx","components/Header/header-menu.tsx","constants/routes.tsx","components/Header/Header.tsx","api/makeRequest.tsx","api/blind/Blind.api.tsx","container/Blind/Blind.tsx","container/Weather/Weather.tsx","container/Light/Light.tsx","components/Icon/Icon.tsx","utility/formatHandler.tsx","components/Accordion/AccordionItem/AccordionItem.tsx","components/Accordion/Accordion.tsx","container/Home/Home.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Method","HEADER_MENU","items","name","to","id","Header","map","item","className","key","exact","activeClassName","this","renderHelperCreateMenu","React","AbstractRequestApi","defaultHeader","Accept","url","method","body","headers","newHeaders","_addHeader","timeoutWrapper","getTimeout","fetch","JSON","stringify","response","ok","json","errorMsg","Error","then","data","checkForErrorData","console","log","errors","Promise","reject","optionalHeaders","Object","keys","forEach","millis","promise","resolve","timeoutId","setTimeout","res","clearTimeout","err","getBlinds","_makeRequest","GET","Blind","useState","setBlindObjects","useEffect","a","BlindApi","fetchBlinds","Weather","Light","Icon","icon","props","cacheRequests","src","classy","classNameArray","filter","join","AccordionItem","state","open","accordionItemRef","createRef","handleAccordionOnClick","setState","prevState","children","allowMultipleOpen","activeTab","index","title","titleDescription","errorMessage","isActive","buttonClasses","push","button","aria-expanded","aria-controls","onClick","description","ref","hidden","Component","Accordion","prev","scrollIntoView","prevProps","onActiveTabChange","Children","cloneElement","bind","e","createDiv","Home","heading","App","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"yLAAYA,E,2ECECC,EAAc,CACzBC,MAAO,CACL,CACEC,KAAM,OACNC,GCNiB,IDOjBC,GAAI,0BAEN,CACEF,KAAM,UACNC,GCRiB,WDSjBC,GAAI,0BAEN,CACEF,KAAM,QACNC,GCfe,SDgBfC,GAAI,wBAEN,CACEF,KAAM,QACNC,GCnBe,SDoBfC,GAAI,0BElBWC,E,uLAIb,OAD6BL,EAAYC,MACXK,KAAI,SAAAC,GAC9B,OACI,sBAAIC,UAAW,oBAAqBC,IAAKF,EAAKH,IAC1C,gBAAC,IAAD,CACID,GAAII,EAAKJ,GACTC,GAAIG,EAAKH,GACTM,OAAO,EACPF,UAAW,eACXG,gBAAiB,uCAEhBJ,EAAKL,Y,+BAQ1B,OACI,0BAAQM,UAAU,UAChB,uBAAKA,UAAU,gBACb,sBAAIA,UAAU,qBAAqBI,KAAKC,2BAE1C,uBAAKL,UAAU,4B,GA3BWM,a,iCCFvBC,EAAb,iDAEEC,cAAgB,CACdC,OAAQ,mBACR,eAAgB,mBAChB,8BAA+B,KALnC,kGAQyBC,EAAaC,EAAgBC,EAAYC,GARlE,yFASUC,EAAaV,KAAKW,WAAWF,GATvC,kBAY6BT,KAAKY,eAC1BZ,KAAKa,aACLC,MAAMR,EAAK,CACTG,QAASC,EACTF,KAAMO,KAAKC,UAAUR,GACrBD,YAjBV,WAYYU,EAZZ,QAqBoBC,GArBpB,iCAsBuCD,EAASE,OAtBhD,aAsBcC,EAtBd,OAuBc,IAAIC,MAAMD,GAvBxB,iCAyBaH,EAASE,OAAOG,MAAK,SAACC,GAAD,OAAe,EAAKC,kBAAkBD,OAzBxE,wCA2BME,QAAQC,IAAR,MACM,IAAIL,MAAJ,MA5BZ,0JAiCI,OAAO,MAjCX,wCAoCoBE,GAChB,OAAIA,EAAKI,OACAC,QAAQC,OAAO,IAAIR,MAAME,EAAKI,SAEhCJ,IAxCX,iCA2CaO,GACT,IAAMrB,EAAUT,KAAKI,cAKrB,OAHI0B,GACFC,OAAOC,KAAKF,GAAiBG,SAAQ,SAAApC,GAAG,OAAKY,EAAQZ,GAAOiC,EAAgBjC,MAEvEY,IAjDX,qCAqDiByB,EAAgBC,GAC7B,OAAO,IAAIP,SAAQ,SAACQ,EAASP,GAC3B,IAAMQ,EAAYC,YAAW,WAC3BT,EAAO,IAAIR,MAAM,YAChBa,GACHC,EAAQb,MACN,SAAAiB,GACEC,aAAaH,GACbD,EAAQG,MAEV,SAAAE,GACED,aAAaH,GACbR,EAAOY,aAjEjB,M,SJFYtD,K,YAAAA,E,UAAAA,E,UAAAA,E,gBAAAA,E,eAAAA,M,KKGL,IAYQ,MAZf,4KAGI,OAAOa,KAAK0C,cAHhB,kCAOI,OADAjB,QAAQC,IAAI,YACL1B,KAAK2C,aAAa,sBAAsBxD,EAAOyD,SAP1D,GAA8BzC,ICsBf0C,EApBS,WAAO,IAAD,EACYC,qBADZ,mBACPC,GADO,WAE5BC,qBAAU,WACRN,MAEC,IAGH,IAAMA,EAAS,uCAAG,4BAAAO,EAAA,sEACyBC,EAASC,cADlC,OACVlC,EADU,OAEhBQ,QAAQC,IAAIT,GACZ8B,EAAgB9B,GAHA,2CAAH,qDAOf,OACI,iDCXSmC,EAPW,WAExB,OACI,oDCISC,EAPS,WAEtB,OACI,kD,yBCESC,EAJF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,wBACnC,OAAO,gBAAC,IAAD,eAAKC,eAAe,EAAMC,IAAK,UAAYH,EAAO,QAAYC,KCL1DG,EAAS,SAACC,GAAD,OAA+CA,EAAeC,QAAO,SAAAjE,GAAS,OAAIA,KAAWkE,KAAK,MCgGzGC,E,4MAnEbC,MAA6B,CAAEC,MAAM,G,EAErCC,iBAAmBhE,IAAMiE,Y,EAEzBC,uBAAyB,WACvB,EAAKC,UAAS,SAACC,GAAD,MAAqC,CACjDL,MAAOK,EAAUL,U,uDAIX,IAAD,SAYHjE,KAAKwD,MAVPe,EAFK,EAELA,SACAjF,EAHK,EAGLA,KACAkF,EAJK,EAILA,kBACAC,EALK,EAKLA,UACAlB,EANK,EAMLA,KACAmB,EAPK,EAOLA,MACAN,EARK,EAQLA,uBACAO,EATK,EASLA,MACAC,EAVK,EAULA,iBACAC,EAXK,EAWLA,aAEIC,EAAWN,EAAoBxE,KAAKgE,MAAMC,KAAOQ,IAAcC,EAE/DK,EAAgB,CAAC,qBACpBD,GACDC,EAAcC,KAAK,2BAGrB,IAEMC,EACJ,4BACErF,UAAW+D,EAAOoB,GAClBG,gBAAeJ,EACfK,gBAAA,UAAkB7F,EAAlB,yBAAuCoF,EAAvC,OACAU,QAASZ,EAAoB,kBAAM,EAAKJ,0BAA2B,kBAAMA,EAAuBM,KAEhG,0BAAM9E,UAAU,2BACb2D,GAAQ,kBAAC,EAAD,CAAM3D,UAAW,4BAA6B2D,KAAMA,IAC7D,8BACGqB,GAAoB,4BAAQhF,UAAU,kCAAkCgF,GACxED,EACAE,GACC,0BAAMjF,UAAS,4BACb,2CADF,KAC6BiF,EAAaF,QAI9C,kBAAC,EAAD,CAAMpB,KAAMuB,EAAW,QAAU,UAElCA,GAAYD,GAAgB,0BAAMjF,UAAS,gCAAmCiF,EAAaQ,cAIhG,OACE,yBAAKzF,UAAW,kBAAmBC,IAAG,UAAKP,EAAL,YAAaoF,GAASY,IAAKtF,KAAKkE,kBACpE,wBAAItE,UAAW,0BAA2BqF,GAC1C,wBAAIzF,GAAE,UAAKF,EAAL,yBAA0BoF,EAA1B,OAAsC9E,UAAW+D,EA7BzC,CAAC,4BA6B2D4B,QAAST,GAChFP,Q,GA7DiBiB,aCuCbC,E,4MAhDbzB,MAAyB,CAAES,WAAY,G,EAQvCL,uBAAyB,SAACM,GACxB,EAAKL,UACH,SAACqB,GAAD,MAA4B,CAC1BjB,UAAWiB,EAAKjB,YAAcC,GAAS,EAAIA,MAE7C,WACE,yBAAqBA,IAASiB,qB,iEAZjBC,GACbA,EAAUtG,OAASU,KAAKwD,MAAMlE,MAChCU,KAAKqE,SAAS,CAAEI,WAAY,M,kCAenB,IAAD,SACgEzE,KAAKwD,MAAvEhE,EADE,EACFA,GAAI+E,EADF,EACEA,SAAUC,EADZ,EACYA,kBAAmBC,EAD/B,EAC+BA,UAAWoB,EAD1C,EAC0CA,kBAEpD,OAAOC,WAASpG,IAAI6E,GAAU,SAACA,EAAeG,GAC5C,OAAOqB,uBAAaxB,EAAU,CAC5BG,QACApF,KAAME,EACNK,IAAK6E,EACLD,UAAWoB,EAAoBpB,EAAY,EAAKT,MAAMS,UACtDD,kBAAmBA,EACnBJ,uBAAwByB,GAAqB,EAAKzB,uBAAuB4B,KAAK,EAAMtB,GACpFY,IAAK,SAAAW,GACH,EAAK,gBAAD,OAAiBvB,IAAWuB,U,+BAM9B,IAAD,EACmBjG,KAAKwD,MAAvBhE,EADD,EACCA,GAAII,EADL,EACKA,UAEZ,OACE,wBAAIJ,GAAE,UAAKA,EAAL,iBAAwBI,UAAS,oBAAeA,GAAwB,KAC3EI,KAAKkG,iB,GA3CUV,aCUTW,EAvBQ,WAErB,OACI,2BACE,gBAAC,EAAD,CAAW3G,GAAI,YAAaF,KAAM,SAAUkF,mBAAmB,EAAM4B,QAAS,SAC5E,gBAAC,EAAD,CACI9G,KAAM,UACNqF,MAAO,cACPpB,KAAM,sBAER,gDAEF,gBAAC,EAAD,CAAejE,KAAM,gBAAcqF,MAAM,UACvC,oDAEF,gBAAC,EAAD,CAAerF,KAAM,gBAAcqF,MAAM,OACvC,uDCYG0B,MAxBf,WACE,OACI,gBAAC,IAAD,KACE,gCACA,gBAAC,EAAD,MACE,wBAAM7G,GAAG,eACL,gBAAC,IAAD,CAAOM,OAAO,EAAMD,IAAI,UAAUyG,KAAM,KACpC,gBAAC,EAAD,OAEN,gBAAC,IAAD,CAAOxG,OAAO,EAAMD,IAAI,UAAUyG,KZfvB,YYgBT,gBAAC,EAAD,OAEF,gBAAC,IAAD,CAAOxG,OAAK,EAACD,IAAI,UAAUyG,KZnBlB,UYoBP,gBAAC,EAAD,OAEF,gBAAC,IAAD,CAAOxG,OAAK,EAACD,IAAI,UAAUyG,KZvBlB,UYwBP,gBAAC,EAAD,WCbMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,SACI,gBAAC,IAAD,KACI,gBAAC,EAAD,OAEJC,SAASC,eAAe,SDwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3F,MAAK,SAAA4F,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5F,QAAQ4F,MAAMA,EAAMC,c","file":"static/js/main.8d98a270.chunk.js","sourcesContent":["export enum Method {\n  POST = 'POST',\n  PUT = 'PUT',\n  GET = 'GET',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n}\n","import {BLIND, LANDING, LIGHT, WEATHER} from \"../../constants/routes\";\n\nexport const HEADER_MENU = {\n  items: [\n    {\n      name: 'Home',\n      to: LANDING,\n      id: 'header-landing-link-id',\n    },\n    {\n      name: 'Weather',\n      to: WEATHER,\n      id: 'header-weather-link-id',\n    },\n    {\n      name: 'Light',\n      to: LIGHT,\n      id: 'header-light-link-id',\n    },\n    {\n      name: 'Blind',\n      to: BLIND,\n      id: 'header-blind-link-id',\n    },\n  ],\n};\n","export const LANDING = '/';\nexport const LIGHT = '/light';\nexport const BLIND = '/blind';\nexport const WEATHER = '/weather';\n","import * as React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { HEADER_MENU } from './header-menu';\n\nexport default class Header extends React.Component<{}, {}> {\n    renderHelperCreateMenu() {\n        // Remove menu item from Navigation Bar if user is not allowed to see.\n        var visibleNavigationItems = HEADER_MENU.items;\n        return visibleNavigationItems.map(item => {\n            return (\n                <li className={'Header__menu-item'} key={item.id}>\n                    <NavLink\n                        to={item.to}\n                        id={item.id}\n                        exact={true}\n                        className={'Header__link'}\n                        activeClassName={'Header__link Header__link--selected'}\n                    >\n                        {item.name}\n                    </NavLink>\n                </li>\n            );\n        });\n    }\n\n  public render() {\n    return (\n        <header className=\"Header\">\n          <nav className=\"Header__menu\">\n            <ul className=\"Header__menu-list\">{this.renderHelperCreateMenu()}</ul>\n          </nav>\n          <div className=\"Header__decoration\" />\n        </header>\n    );\n  }\n}\n","import { Method } from './ApiMethodEnum';\n\nexport class AbstractRequestApi {\n\n  defaultHeader = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*',\n  };\n\n  async _makeRequest<T>( url: string, method: Method, body?: any, headers?: any): Promise<T> {\n    const newHeaders = this._addHeader(headers);\n\n    try {\n      const response = await this.timeoutWrapper(\n        this.getTimeout(),\n        fetch(url, {\n          headers: newHeaders,\n          body: JSON.stringify(body),\n          method,\n        })\n      );\n\n      if (!response.ok) {\n        const errorMsg: string = await response.json();\n        throw new Error(errorMsg);\n      }\n      return response.json().then((data: any) => this.checkForErrorData(data));\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n\n  getTimeout(): number {\n    return 50000;\n  }\n\n  checkForErrorData(data: any) {\n    if (data.errors) {\n      return Promise.reject(new Error(data.errors));\n    }\n    return data;\n  }\n\n  _addHeader(optionalHeaders?: string[]): any {\n    const headers = this.defaultHeader;\n\n    if (optionalHeaders) {\n      Object.keys(optionalHeaders).forEach(key => (headers[key] = optionalHeaders[key]));\n    }\n    return headers;\n  }\n\n\n  timeoutWrapper(millis: number, promise): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        reject(new Error(\"Error\"));\n      }, millis);\n      promise.then(\n        res => {\n          clearTimeout(timeoutId);\n          resolve(res);\n        },\n        err => {\n          clearTimeout(timeoutId);\n          reject(err);\n        }\n      );\n    });\n  }\n}\n","import {AbstractRequestApi} from '../makeRequest';\nimport {Method} from \"../ApiMethodEnum\";\n\nexport class BlindApi extends AbstractRequestApi {\n\n  fetchBlinds():Promise<any> {\n    return this.getBlinds()\n  }\n  private getBlinds():Promise<Response> {\n    console.log(\"Bin Hier\");\n    return this._makeRequest(\"/blind/all/position\",Method.GET);\n  }\n\n}\n\nexport default new BlindApi();\n","import * as React from 'react';\nimport BlindApi from \"../../api/blind/Blind.api\";\nimport {IBlindInterface} from \"../../api/blind/Blind.interface\";\nimport {useEffect, useState} from \"react\";\n\nconst Blind: React.FC = () => {\n  const [blindObjects, setBlindObjects] = useState<IBlindInterface[]>();\n  useEffect(() => {\n    getBlinds();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const getBlinds = async () => {\n    const response:IBlindInterface[] = await BlindApi.fetchBlinds();\n    console.log(response);\n    setBlindObjects(response)\n  };\n\n\n  return (\n      <div>Hello from Blind </div>\n  );\n};\n\nexport default Blind;\n","import * as React from 'react';\n\n\nconst Weather: React.FC = () => {\n\n  return (\n      <div> Hello from Weather </div>\n  );\n};\n\nexport default Weather;\n","import * as React from 'react';\n\n\nconst Light: React.FC = () => {\n\n  return (\n      <div> Hello from Light </div>\n  );\n};\n\nexport default Light;\n","import * as React from 'react';\nimport SVG from 'react-inlinesvg';\n\n// @ts-ignore\nconst Icon = ({ icon, ...props }) => {\n  return <SVG cacheRequests={true} src={'/icons/' + icon + '.svg'} {...props} />;\n};\n\nexport default Icon;\n","export const classy = (classNameArray: (string | null)[]): string => classNameArray.filter(className => className).join(' ');\n","import React, { Component } from 'react';\nimport Icon from '../../Icon/Icon';\nimport { classy } from '../../../utility/formatHandler';\n\nexport interface IAccordionItemProps {\n  title: string | JSX.Element;\n  titleDescription?: string | JSX.Element;\n  children: React.ReactNode;\n  errorMessage?: {\n    title: string;\n    description?: string;\n  };\n  icon?: string;\n}\n\nexport interface IAccordionItemParentProps {\n  handleAccordionOnClick?: any;\n  activeTab?: number;\n  allowMultipleOpen?: boolean;\n  index?: number;\n  name?: string;\n  ref?: any;\n}\n\nexport interface IAccordionItemState {\n  open: boolean;\n}\n\nclass AccordionItem extends Component<IAccordionItemProps & IAccordionItemParentProps, IAccordionItemState> {\n  state: IAccordionItemState = { open: false };\n\n  accordionItemRef = React.createRef<HTMLDivElement>();\n\n  handleAccordionOnClick = () => {\n    this.setState((prevState: IAccordionItemState) => ({\n      open: !prevState.open,\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      name,\n      allowMultipleOpen,\n      activeTab,\n      icon,\n      index,\n      handleAccordionOnClick,\n      title,\n      titleDescription,\n      errorMessage,\n    } = this.props;\n    const isActive = allowMultipleOpen ? this.state.open : activeTab === index;\n\n    const buttonClasses = ['Accordion__button'];\n    if(isActive){\n      buttonClasses.push(\"Accordion__button--open\")\n    }\n\n    const ddClasses = ['Accordion__item-content'];\n\n    const button = (\n      <button\n        className={classy(buttonClasses)}\n        aria-expanded={isActive}\n        aria-controls={`${name}-accordion-dd-${index}-id`}\n        onClick={allowMultipleOpen ? () => this.handleAccordionOnClick() : () => handleAccordionOnClick(index)}\n      >\n        <span className=\"Accordion__button-title\">\n          {icon && <Icon className={'Accordion__icon--optional'} icon={icon} />}\n          <span>\n            {titleDescription && <strong className=\"Accordion__button-title-header\">{titleDescription}</strong>}\n            {title}\n            {errorMessage && (\n              <span className={`Accordion__error-message`}>\n                <strong>Achtung</strong>: {errorMessage.title}\n              </span>\n            )}\n          </span>\n          <Icon icon={isActive ? 'minus' : 'plus'} />\n        </span>\n        {isActive && errorMessage && <span className={`Accordion__error-description`}>{errorMessage.description}</span>}\n      </button>\n    );\n\n    return (\n      <div className={'Accordion__item'} key={`${name}-${index}`} ref={this.accordionItemRef}>\n        <dt className={'Accordion__item-header'}>{button}</dt>\n        <dd id={`${name}-accordion-dd-${index}-id`} className={classy(ddClasses)} hidden={!isActive}>\n          {children}\n        </dd>\n      </div>\n    );\n  }\n}\n\nexport default AccordionItem;\n","import React, { Component, Children, cloneElement, ReactElement } from 'react';\nimport { IAccordionItemParentProps } from './AccordionItem/AccordionItem';\n\ninterface IAccordionProps {\n  /** id prop */\n  id: string;\n  className?: string;\n  allowMultipleOpen?: boolean;\n  name?: string;\n  heading?: any;\n  activeTab?: number;\n  onActiveTabChange?: (index: number) => void;\n}\n\nexport interface IAccordionState {\n  activeTab: number;\n}\n\nclass Accordion extends Component<IAccordionProps, IAccordionState> {\n  state: IAccordionState = { activeTab: -1 };\n\n  componentDidUpdate(prevProps: IAccordionProps) {\n    if (prevProps.name !== this.props.name) {\n      this.setState({ activeTab: -1 });\n    }\n  }\n\n  handleAccordionOnClick = (index: number) => {\n    this.setState(\n      (prev: IAccordionState) => ({\n        activeTab: prev.activeTab === index ? -1 : index,\n      }),\n      () => {\n        this[`accordionItem${index}`].scrollIntoView();\n      }\n    );\n  };\n\n  createDiv() {\n    const { id, children, allowMultipleOpen, activeTab, onActiveTabChange } = this.props;\n\n    return Children.map(children, (children: any, index: number) => {\n      return cloneElement(children, {\n        index,\n        name: id,\n        key: index,\n        activeTab: onActiveTabChange ? activeTab : this.state.activeTab,\n        allowMultipleOpen: allowMultipleOpen,\n        handleAccordionOnClick: onActiveTabChange || this.handleAccordionOnClick.bind(this, index),\n        ref: e => {\n          this[`accordionItem${index}`] = e;\n        },\n      });\n    });\n  }\n\n  render() {\n    const { id, className } = this.props;\n\n    return (\n      <dl id={`${id}-accordion-id`} className={`Accordion ${className ? className : ''}`}>\n        {this.createDiv()}\n      </dl>\n    );\n  }\n}\n\nexport default Accordion;\n","import * as React from 'react';\nimport AccordionItem from \"../../components/Accordion/AccordionItem/AccordionItem\";\nimport Accordion from \"../../components/Accordion/Accordion\";\n\n\nconst Home: React.FC = () => {\n\n  return (\n      <div>\n        <Accordion id={'home-page'} name={'Lights'} allowMultipleOpen={true} heading={\"Hello\"}>\n          <AccordionItem\n              name={'Light 1'}\n              title={'Light Title'}\n              icon={'rental-object-flat'}\n          >\n            <p>Hello Light item 1</p>\n          </AccordionItem>\n          <AccordionItem name={'öffne mich'} title=\"Center\">\n            <p>Hello Accordion Item 2</p>\n          </AccordionItem>\n          <AccordionItem name={'öffne mich'} title=\"End\">\n            <p>Hello Accordion Item 2</p>\n          </AccordionItem>\n        </Accordion>\n      </div>\n  );\n};\n\nexport default Home;\n","import * as React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Blind from \"./container/Blind/Blind\";\nimport {BLIND, LIGHT, WEATHER} from \"./constants/routes\";\nimport Weather from \"./container/Weather/Weather\";\nimport Light from \"./container/Light/Light\";\nimport Home from \"./container/Home/Home\";\n\nfunction App() {\n  return (\n      <Router>\n        <>\n        <Header />\n          <main id=\"app-main-id\">\n              <Route exact={true} key=\"route-1\" path={'/'}>\n                  <Home />\n              </Route>\n            <Route exact={true} key=\"route-2\" path={WEATHER}>\n              <Weather />\n            </Route>\n            <Route exact key=\"route-3\" path={BLIND}>\n              <Blind />\n            </Route>\n            <Route exact key=\"route-4\" path={LIGHT}>\n              <Light />\n            </Route>\n          </main>\n        </>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}